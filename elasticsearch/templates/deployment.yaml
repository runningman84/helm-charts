apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "elasticsearch.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "elasticsearch.name" . }}
    helm.sh/chart: {{ include "elasticsearch.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "elasticsearch.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "elasticsearch.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: discovery.type
              value: "single-node"
            - name: bootstrap.memory_lock
              value: "true"
            - name: ES_JAVA_OPTS
              value: "-Xms1024m -Xmx1024m"
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: transport
              containerPort: 9300
              protocol: TCP
            - name: perftop
              containerPort: 9600
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_cluster/health
              port: http
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: http
            initialDelaySeconds: 60
          volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: datastore
          resources:
{{ toYaml .Values.resources | indent 12 }}
        - name: {{ .Chart.Name }}-exporter
          image: "{{ .Values.monitoring.image.repository }}:{{ .Values.monitoring.image.tag }}"
          imagePullPolicy: {{ .Values.monitoring.image.pullPolicy }}
          args:
  {{- if .Values.monitoring.args }}
  {{ toYaml .Values.monitoring.args | indent 8 }}
  {{- end }}
          env:
            - name: ES_URI
              value: "http://127.0.0.1:9200"
          ports:
            - name: metrics
              containerPort: 9114
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: metrics
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: metrics
            initialDelaySeconds: 60
          resources:
{{ toYaml .Values.monitoring.resources | indent 12 }}
      volumes:
      - name: datastore
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "elasticsearch.fullname" . }}{{- end }}
      {{- else }}
        emptyDir: {}
      {{ end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
