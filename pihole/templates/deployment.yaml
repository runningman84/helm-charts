apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "pihole.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "pihole.name" . }}
    helm.sh/chart: {{ include "pihole.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pihole.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pihole.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
         - name: config
           emptyDir: {}      
      containers:
        - name: {{ .Chart.Name }}-core
          image: "{{ .Values.pihole.image.repository }}:{{ .Values.pihole.image.tag }}"
          imagePullPolicy: {{ .Values.pihole.image.pullPolicy }}
          volumeMounts:
          - mountPath: /etc/pihole
            name: config
          ports:
            - name: dns
              containerPort: 53
              protocol: UDP
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /admin/api.php?status
              port: http
            initialDelaySeconds: 10
            periodSeconds: 60
          readinessProbe:
            exec:              
              command:
              - nslookup
              - -po=53
              - www.google.com.
              - 127.0.0.1            
            initialDelaySeconds: 10
            periodSeconds: 60
          env:            
            - name: ServerIP
              value: 0.0.0.0
            - name: DNS1
              value: 127.0.0.1#54              
            - name: DNS2
              value: "no"
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "pihole.fullname" . }}
                  key: web-password
          resources:
{{ toYaml .Values.resources | indent 12 }}
        - name: {{ .Chart.Name }}-cloudflared
          image: "{{ .Values.cloudflared.image.repository }}:{{ .Values.cloudflared.image.tag }}"
          imagePullPolicy: {{ .Values.cloudflared.image.pullPolicy }}
          ports:
            - name: dns
              containerPort: 54
              protocol: UDP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          readinessProbe:
            exec:
              command:
              - nslookup
              - -po=54
              - cloudflare.com.
              - 127.0.0.1
            initialDelaySeconds: 5
            periodSeconds: 10
          # env:
          #   - name: DNS1
          #     value: dns.google.com
          #   - name: DNS2
          #     value: dns.quad9.net
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
